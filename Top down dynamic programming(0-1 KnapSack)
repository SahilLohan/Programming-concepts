// Link for problem :- https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1


// code :- 

class Solution
{
    
    public:
    //Function to return max value that can be put in knapsack of capacity W.
    int knapSack(int c, int wt[], int val[], int n) 
    { 
       // Your code here
       int dp[n+1][c+1];
       //initialisation
       
       for(int i=0;i<n+1;i++)
       {
           for(int j=0;j<c+1;j++)
           {
               if(i==0 || j==0)
               {
                   dp[i][j]=0;
               }
               
           }
       }
       
       // choice diagram
       
       for(int i=1;i<n+1;i++)
       {
           for(int j=1;j<c+1;j++)
           {
               if(wt[i-1]<=j)
               {
                   //cout << "Weight kam tha \n";
                   dp[i][j]=max(0+dp[i-1][j] , val[i-1]+dp[i-1][j-wt[i-1]]);
               }
               else
               {
                   //cout << "Weight jyada tha ";
                   dp[i][j]=dp[i-1][j];
               }
               
               //cout << dp[i][j] << " ";
           }
           
       }
       
       return dp[n][c];
       
    }
};
